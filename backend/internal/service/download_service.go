package service

import (
	"context"
	"fmt"
	"time"

	"ip-store/backend/internal/database"
)

// GenerateDownloadURL simulates generating a pre-signed URL for a digital product.
// In a real application, this would interact with an object storage service (e.g., AWS S3, Cloudflare R2)
// to generate a time-limited pre-signed URL for the given fileKey.
func GenerateDownloadURL(ctx context.Context, productID int64) (string, error) {
	product, err := database.GetProductByID(ctx, productID)
	if err != nil {
		return "", err
	}

	// Simulate a pre-signed URL. In reality, this would be generated by the object storage SDK.
	// The URL would typically include a signature and an expiration time.
	// For example: https://your-bucket.s3.amazonaws.com/your-file-key?AWSAccessKeyId=...&Expires=...&Signature=...
	return fmt.Sprintf("https://example.com/downloads/%s?expires=%d", product.FileKey, time.Now().Add(5*time.Minute).Unix()), nil
}
